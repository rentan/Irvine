/*
スクリプト初期化データ
guid={0D313B7E-9959-4F23-9AEC-64276F111EDB}
caption=Dorothy2R 設定
version=20140718
hint=Dorothy2R 設定
event=OnMainMenuClick
match=
author=xor, rentan
synchronize=0
*/

// based on Dorothy2set.dms version 0.19 by xor

/*
Copyright (C) 2014 rentan at rentan.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


var F = "
object Form1: TForm1
  Left = 437
  Top = 228
  Width = 738
  Height = 619
  Caption = 'Dorothy2R 設定'
  Color = clBtnFace
  DragMode = dmAutomatic
  Font.Charset = SHIFTJIS_CHARSET
  Font.Color = clWindowText
  Font.Height = -12
  Font.Name = 'ＭＳ Ｐゴシック'
  Font.Style = []
  Menu = MainMenu1
  OldCreateOrder = False
  Position = poScreenCenter
  ShowHint = True
  DesignSize = (
    730
    573)
  PixelsPerInch = 96
  TextHeight = 12
  object ListView1: TListView
    Left = 0
    Top = 0
    Width = 723
    Height = 541
    Anchors = [akLeft, akTop, akRight, akBottom]
    Checkboxes = True
    Columns = <
      item
        Caption = 'キャプション'
        Width = 200
      end
      item
        Caption = '優先度'
      end
      item
        Caption = 'バージョン'
        Width = 90
      end
      item
        Caption = '作者'
        Width = 70
      end
      item
        AutoSize = True
        Caption = '説明'
      end>
    ReadOnly = True
    RowSelect = True
    PopupMenu = PopupMenu1
    TabOrder = 0
    ViewStyle = vsReport
  end
  object StatusBar1: TStatusBar
    Left = 0
    Top = 554
    Width = 730
    Height = 19
    AutoHint = True
    Panels = <>
    ParentShowHint = False
    ShowHint = True
    SimplePanel = True
  end
  object PopupMenu1: TPopupMenu
    Left = 104
    Top = 104
    object Edit1: TMenuItem
      Caption = '編集'
    end
    object N18: TMenuItem
      Caption = '設定'
    end
    object N1: TMenuItem
      Caption = 'ドキュメント'
    end
    object N2: TMenuItem
      Caption = 'プロジェクト'
    end
  end
  object MainMenu1: TMainMenu
    Left = 16
    object File1: TMenuItem
      Caption = 'ファイル(&F)'
      object New1: TMenuItem
        Caption = '新規作成(&N)'
      end
      object N22: TMenuItem
        Caption = 'ドキュメント作成'
        Enabled = False
      end
      object script1: TMenuItem
        Caption = '設定用script作成'
        Enabled = False
      end
      object script2: TMenuItem
        Caption = 'その他のscript作成'
      end
      object Open1: TMenuItem
        Caption = '開く(&O)...'
        Enabled = False
        Hint = '選択アイテムをエディタで開く|fd;adkfj;alkjf;'
      end
      object N23: TMenuItem
        Caption = 'ドキュメントを開く'
        Enabled = False
      end
      object script3: TMenuItem
        Caption = '設定用scriptを開く'
        Enabled = False
      end
      object script4: TMenuItem
        Caption = 'その他のscriptを開く'
      end
      object N25: TMenuItem
        Caption = '-'
      end
      object iniSave: TMenuItem
        Caption = '設定保存'
      end
      object iniLoad: TMenuItem
        Caption = '設定読込み'
      end
      object N26: TMenuItem
        Caption = '-'
      end
      object N27: TMenuItem
        Caption = 'クローン'
        Enabled = False
      end
      object N24: TMenuItem
        Caption = '-'
      end
      object Save1: TMenuItem
        Caption = '上書き保存(&S)'
      end
      object N5: TMenuItem
        Caption = '-'
      end
      object N17: TMenuItem
        Caption = '保存して終了'
      end
      object Exit1: TMenuItem
        Caption = '終了(&X)'
      end
    end
    object Edit2: TMenuItem
      Caption = '編集(&E)'
      object N4: TMenuItem
        Caption = '全て選択'
      end
      object N6: TMenuItem
        Caption = '全て解除'
      end
      object N20: TMenuItem
        Caption = '優先度を変える'
        Enabled = False
      end
      object N21: TMenuItem
        Caption = 'データを再読込み'
      end
      object N7: TMenuItem
        Caption = '-'
      end
      object N8: TMenuItem
        Caption = 'デバッグモード'
        Checked = True
      end
    end
    object pu1: TMenuItem
      Caption = 'プロジェクト'
      object pro1: TMenuItem
        Caption = 'プロジェクト新規作成'
      end
      object pro2: TMenuItem
        Caption = 'プロジェクト編集'
      end
      object pro3: TMenuItem
        Caption = 'プロジェクトファイル出力'
      end
    end
    object N3: TMenuItem
      Caption = '設定'
    end
    object N11: TMenuItem
      Caption = 'パッケージ'
      Enabled = False
    end
    object tool1: TMenuItem
      Caption = 'ツール'
      Enabled = False
    end
    object Help1: TMenuItem
      Caption = 'ヘルプ'
      object doc: TMenuItem
        Caption = 'ドキュメント'
      end
      object N16: TMenuItem
        Caption = 'バージョン'
      end
    end
  end
end
";




//========================
//設定用フォーム
//========================
class SettingForm(VCLForm){
	//var ColumnToSort = 0;
	//-------------------
	//コンストラクタ
	//-------------------
	function SettingForm(){
		loadFromText(F);
		//ListView1.onColumnClick = ListView1sort;
		//ListView1.onCompare = ListView1Compare;
		//PopupMenu1.onPopup = doc;

		ListView1.acceptDrop = true;
		menu_new_set();
		menu_setting_set();
		edit_set();
		debug_set();
		ini_save_set();
		ini_load_set();
		tool_set();
		set_set();
		package_set();
		ListView1.onSelectItem = selectItem;	//アイテム選択
		N18.onClick = setting;			//設定
		script3.onClick = edit_setting;		//設定編集
		N1.onClick = doc2;			//ドキュメント
		N16.onClick = ver_dsp;			//ヘルプ-バージョン情報
		doc.onClick = help_doc;			//ヘルプ-ドキュメント
		N8.onClick =debug_mode;			//デバッグモード
		ListView1.onDragDropFiles = DD;		//ファイルＤ＆Ｄ
		ListView1.onDragDropText = DDurl;	//テキストＤ＆Ｄ
		N4.onClick = edit_allset;		//全て選択
		N6.onClick = edit_allreset;		//全て解除
		Open1.onClick = file_edit;		//プログラム編集
		Edit1.onClick = file_edit;		//プログラム編集
		N2.onClick = user_edit;			//プログラム編集 (user)
		Exit1.onClick = exit1;			//終了
		Save1.onClick = save1;			//上書き保存
		N17.onClick = exit2;			//保存して終了
		pro1.onClick = project_new;		//プロジェクト新規作成
		pro2.onClick = project_edit;		//プロジェクト編集
		pro3.onClick = project_out;		//プロジェクトファイル出力
		N23.onClick = edit_doc;			//ドキュメント編集
		N22.onClick = new_doc;			//ドキュメント作成
		script2.onClick = etc_new;		//その他のscript作成
		script4.onClick = etc_edit;		//その他のscriptを開く
		N21.onClick = reload;			//データを再読込み
		//iniSave.onClick = ini_save;		//設定保存
		//iniLoad.onClick = ini_load;		//設定読込み
		//onHint = msg2;
		selectItem();
	}

	//=========================================================================================
	//パッケージ
	//=========================================================================================
	/*
	package files is dorothy2_system_menu_package + *.dms
		tool file format
			header
				//Dorothy2
				//caption=
				//version=
				//hint=
				//author=
				//path=system\menu\package
				//end
			body
				function(){}
	*/
	//=================================================
	//パッケージをセット
	//=================================================
	function package_set(){
		var dir = new Directory(dorothy2_system_menu_package);
		if(!dir.exists()){
			return;
		}
		N11.Enabled = false;
		menu_package = new Object;
		var filename = dir.findFirstFile('*.dms');
		while(filename != null){
			if(filename.indexOf('.dms#') != -1){
				filename = dir.findNextFile();
				continue;
			}
			N11.Enabled = true;
			var hd = script_file_read(dir.path + filename);
			filename = filename.slice(0, filename.lastIndexOf('.'));
			menu_package[filename] = new VCLMenuItem;
			menu_package[filename].Caption = hd.caption;
			menu_package[filename].Hint = hd.hint;
			menu_package[filename].filename = filename;
			N11.add(menu_package[filename]);
			menu_package[filename].onClick = package_load;
			filename = dir.findNextFile();
		}
	}
	//=================================================
	//パッケージをロード実行
	//=================================================
	function package_load(menuItem){
		var file = new File(dorothy2_system_menu_package + menuItem.filename + '.dms');
		if(!file.exists){
			alert('ツールが見つからない');
			return;
		}
		var p = file_load(file);
		eval(p)();
	}
	//=========================================================================================
	//設定
	//=========================================================================================
	/*
	set files is dorothy2_system_menu_set + *.dms
		tool file format
			header
				//Dorothy2
				//caption=
				//version=
				//hint=
				//author=
				//path=system\menu\set
				//end
			body
				function(){}
	*/
	//=================================================
	//設定をセット
	//=================================================
	function set_set(){
		var dir = new Directory(dorothy2_system_menu_set);
		if(!dir.exists()){
			return;
		}
		N3.Enabled = false;
		menu_set = new Object;
		var filename = dir.findFirstFile('*.dms');
		while(filename != null){
			if(filename.indexOf('.dms#') != -1){
				filename = dir.findNextFile();
				continue;
			}
			N3.Enabled = true;
			var hd = script_file_read(dir.path + filename);
			filename = filename.slice(0, filename.lastIndexOf('.'));
			menu_set[filename] = new VCLMenuItem;
			menu_set[filename].Caption = hd.caption;
			menu_set[filename].Hint = hd.hint;
			menu_set[filename].filename = filename;
			N3.add(menu_set[filename]);
			menu_set[filename].onClick = set_load;
			filename = dir.findNextFile();
		}
	}
	//=================================================
	//設定をロード実行
	//=================================================
	function set_load(menuItem){
		var file = new File(dorothy2_system_menu_set + menuItem.filename + '.dms');
		if(!file.exists){
			alert('ツールが見つからない');
			return;
		}
		var p = file_load(file);
		eval(p)();
	}
	//=========================================================================================
	//tool
	//=========================================================================================
	/*
	tool files is dorothy2_system_menu_tool + *.dms
		tool file format
			header
				//Dorothy2
				//caption=
				//version=
				//hint=
				//author=
				//path=tool
				//end
			body
				function(){}
	*/
	//=================================================
	//ツールをセット
	//=================================================
	function tool_set(){
		var dir = new Directory(dorothy2_system_menu_tool);
		if(!dir.exists()){
			return;
		}
		tool1.Enabled = false;
		menu_tool = new Object;
		var filename = dir.findFirstFile('*.dms');
		while(filename != null){
			if(filename.indexOf('.dms#') != -1){
				filename = dir.findNextFile();
				continue;
			}
			tool1.Enabled = true;
			var hd = script_file_read(dir.path + filename);
			filename = filename.slice(0, filename.lastIndexOf('.'));
			menu_tool[filename] = new VCLMenuItem;
			menu_tool[filename].Caption = hd.caption;
			menu_tool[filename].Hint = hd.hint;
			menu_tool[filename].filename = filename;
			tool1.add(menu_tool[filename]);
			menu_tool[filename].onClick = tool_load;
			filename = dir.findNextFile();
		}
	}
	//=================================================
	//ツールをロード実行
	//=================================================
	function tool_load(menuItem){
		var file = new File(dorothy2_system_menu_tool + menuItem.filename + '.dms');
		if(!file.exists){
			alert('ツールが見つからない');
			return;
		}
		var p = file_load(file);
		eval(p)();
	}

	//=========================================================================================
	//ini file
	//=========================================================================================
	/*
	original is dorothy2_system + 'Dorothy.ini'
	ini files is dorothy2_system_ini + '*.ini'
	*/
	//=================================================
	//設定読込みをセット
	//=================================================
	function ini_load_set(){
		var dir = new Directory(dorothy2_system_ini);
		if(!dir.exists()){
			return;
		}
		ini_load_file = new Object;

		var filename = dir.findFirstFile('*.ini');
		while(filename != null){
			if(filename.indexOf('Dorothy.ini') != -1){
				filename = dir.findNextFile();
				continue;
			}
			//var hd = script_file_read(dir.path + filename);
			filename = filename.slice(0, filename.lastIndexOf('.'));
			ini_load_file[filename] = new VCLMenuItem;
			ini_load_file[filename].Caption = filename;
			ini_load_file[filename].Hint = '';
			ini_load_file[filename].filename = filename;
			iniLoad.add(ini_load_file[filename]);
			ini_load_file[filename].onClick = ini_load;
			filename = dir.findNextFile();
		}
	}
	//=======================================
	//設定読込み
	//=======================================
	function ini_load(menuItem){
		msg('設定読込み中');
		var file = dorothy2_system_ini + menuItem.filename + '.ini';
		
		//ini から読込み
		var i;
		var ini = new Ini(file);
		var section = 'script';
		for(i in ListView1.Items){
			var filename = ListView1.Items[i].filename + '.dms';
			var checked = ini.read(section , filename , '0');
			ListView1.Items[i].Checked = (checked == 1)? true:false;
		}

		var section = 'mode';
		var ini_debug = ini.read(section , 'debug' , '0');
		N8.Checked = (ini_debug == '1')? true:false;
		mode.debug = N8.Checked;
		for(i in mode){
			if(i != 'debug'){
				if(menu_edit.hasKey(i)){
					var mode_name = i;
					var checked = ini.read(section , mode_name , '0');
					mode[i] =  (checked == 1)? true:false;
					menu_edit[i].Checked = mode[i];
				}
				else{
					mode.removeKey(i);
				}
			}
		}
		msg(file + ' を読込みました。');
	}
	//=================================================
	//設定保存をセット
	//=================================================
	function ini_save_set(){
		var dir = new Directory(dorothy2_system_ini);
		if(!dir.exists()){
			return;
		}
		ini_save_file = new Object;

		var filename = 'new_ini';
		ini_save_file[filename] = new VCLMenuItem;
		ini_save_file[filename].Caption = '新規';
		ini_save_file[filename].Hint = '';
		ini_save_file[filename].filename = filename;
		iniSave.add(ini_save_file[filename]);
		ini_save_file[filename].onClick = ini_save;

		var filename = dir.findFirstFile('*.ini');
		while(filename != null){
			if(filename.indexOf('Dorothy.ini') != -1){
				filename = dir.findNextFile();
				continue;
			}
			//var hd = script_file_read(dir.path + filename);
			filename = filename.slice(0, filename.lastIndexOf('.'));
			ini_save_file[filename] = new VCLMenuItem;
			ini_save_file[filename].Caption = filename;
			ini_save_file[filename].Hint = '';
			ini_save_file[filename].filename = filename;
			iniSave.add(ini_save_file[filename]);
			ini_save_file[filename].onClick = ini_save;
			filename = dir.findNextFile();
		}
	}
	//=======================================
	//設定保存
	//=======================================
	function ini_save(menuItem){
		msg('設定保存中');
		if(menuItem.filename == 'new_ini'){
			var file = Dialog.saveFile('新規設定保存', dorothy2_system_ini + '*.ini');
			if(file == null){
				msg('中止');
				return;
			}
			if(file.indexOf('new_ini') != -1){
				alert('その名前は使えません。');
				msg('中止');
				return;
			}
		}
		else{
			var file = dorothy2_system_ini + menuItem.filename + '.ini';
		}
		//ini に書き込む
		var i;
		var ini = new Ini(file);
		var section = 'script';
		ini.eraseSection(section);
		for(i in ListView1.Items){
			var checked = (ListView1.Items[i].Checked)? '1':'0';
			var filename = ListView1.Items[i].filename + '.dms';
			ini.write(section , filename , checked);
		}
		var section = 'mode';
		ini.eraseSection(section);
		for(i in mode){
			var checked = (mode[i])? '1':'0';
			var mode_name = i;
			ini.write(section , mode_name , checked);
		}
		ini.update();
		ini_save_set();
		ini_load_set();
		msg(file + '　に保存しました。');
	}
	//=========================================================================================
	//project
	//=========================================================================================
	//=======================================
	//プロジェクト新規作成
	//=======================================
	function project_new(){
		var path = dorothy2_system_menu_project + 'new_project.dms';
		var p = file_load(path);
		eval(p)();
	}
	//=======================================
	//プロジェクト編集
	//=======================================
	function project_edit(){
		var path = dorothy2_system_menu_project + 'edit_project.dms';
		var p = file_load(path);
		eval(p)();
	}
	//=======================================
	//プロジェクトファイル出力
	//=======================================
	function project_out(){
		var path = dorothy2_system_menu_project + 'out_project.dms';
		var p = file_load(path);
		eval(p)();
	}


	//=========================================================================================

	//=======================================
	//設定
	//=======================================
	function setting(){
		var path = dorothy2_setting + ListView1.Items[ListView1.Selected.Index].filename + '.set';
		var p = file_load(path);
		Dorothy.matchFile  =ListView1.Items[ListView1.Selected.Index].filename;
		Dorothy.userPath   =Dorothy.path + 'user\' + Dorothy.matchFile + '\';
		Dorothy.userIniPath=Dorothy.path + 'user\' + Dorothy.matchFile + '\' + Dorothy.matchFile + '.ini';
		eval(p)();
	}
	//=======================================
	//アイテム選択
	//=======================================
	function selectItem(){
		if(ListView1.SelCount == 0){
			Edit1.Enabled = false;
			N18.Enabled = false;
			N1.Enabled = false;
			N2.Enabled = false;
			N22.Enabled = false;
			script1.Enabled = false;
			Open1.Enabled = false;
			N23.Enabled = false;
			script3.Enabled = false;
			return;
		}
		Edit1.Enabled = true;
		Open1.Enabled = true;
		var path = dorothy2_setting + ListView1.Items[ListView1.Selected.Index].filename + '.set';
		N18.Enabled = new File(path).exists();
		var path = dorothy2_document + 'program\' + ListView1.Items[ListView1.Selected.Index].filename + '.txt';
		N1.Enabled = new File(path).exists();
		N2.Enabled = true;
		N22.Enabled = !N1.Enabled;
		script1.Enabled = !N18.Enabled;
		N23.Enabled = N1.Enabled;
		script3.Enabled = N18.Enabled;
	}

  //=======================================
  // 上書き保存
  //=======================================
  function save1 () {
    msg ('保存中');

    var ini = new Ini (Dorothy.path + 'system\Dorothy.ini');

    var section = 'script';
    ini.eraseSection (section);
    for (var i in ListView1.Items) {
      var item = ListView1.Items [i];
      ini.write (section, item.filename + '.dms', item.checked ? '1' : '0');
    }

    var section = 'mode';
    ini.eraseSection (section);
    for (i in mode) {
      ini.write (section, i, mode [i] ? '1' : '0');
    }
    ini.update ();


    // Dorothy2R_ini.dms に書き込む文字列を用意する
    var s = new Strings ();

    // debug = ...;
    for (var key in mode) {
      var k = (key == 'debug') ? key : 'Dorothy.' + key;
      s.add (k + ' = ' + mode [key] + ';');
    }

    // Dorothy = { key: value, ... };
    function add (k, v) {
      s.add ('Dorothy.' + k + ' = ' + v + ';');
    }
    function addq (k, v) {
      add (k, "'" + v + "'");
    }

    s.add ("Dorothy = (typeof Dorothy == 'object') ? Dorothy : { version: 'uninitialized' };");
    add ('rVersion', Dorothy.rVersion);

    add ('path', "WScript.Path + 'Dorothy2\\'");
    if (Dorothy.temp == Dorothy.path + 'temp\') {
      add ('temp', "Dorothy.path + 'temp\\'");
    }
    else {
      addq ('temp', Dorothy.temp);
    }
    add ('programDir', "Dorothy.path + 'program\\'");

    addq ('userName', Dorothy.userName);

    addq ('nulUrl', Dorothy.nulUrl);
    addq ('nulProxy', Dorothy.nulProxy);

    add ('common_sp', Dorothy.common_sp);
    add ('common_show', Dorothy.common_show);
    addq ('common_name', Dorothy.common_name);

    // Dorothy.matchList = [ ... ];
    var so = [ ];
    for (i in ListView1.Items) {
      var item = ListView1.Items [i];
      if (!item.checked) {
        continue;
      }

      var hd = script_file_read (Dorothy.programDir + item.filename + '.dms');
      hd = '/' + hd.match.replace (/\\(.)|(\/)/g, '\\$1$2') + '/';

      so.add ([ item.priority, item.filename, hd ]);
    }
    so.sort (priority_func);

    s.add ('Dorothy.matchList = [');
    var last_i = so.length - 1;
    for (i = 0; i <= last_i; ++i) {
      // var pri = 'p: ' + so [i] [0];
      var file = 'f: "' + so [i] [1] + '"';
      var re = 're: ' + so [i] [2];
      var t = ('  { ' + file + ', ' + re + ' }') + ((i < last_i) ? ',' : '');
      s.add (t);
    }
    s.add ('];');

    // Dorothy2R_ini.dms に書き込む
    var filename = 'Dorothy2R_ini.dms';
    var file = new File ((new irvinePath ()).scripts + filename);
    try{
      if (file.exists ()) {
        file.remove ();
      }
      file.open ('w');
      file.write (s.text);
    }
    catch (e) {
      alert (filename + ' の保存に失敗しました: ' + e);
    }
    finally {
      file.close ();
    }
    msg ('保存終了');
  }

	//=======================================
	//スクリプトの優先順にソート
	//=======================================
	function priority_func(a , b){
		if(a[0] < b[0]){
			return true;
		}
		else{
			return false;
		}
	}
	//=======================================
	//保存して終了
	//=======================================
	function exit2(){
		save1();
		exit1();
	}
	//=======================================
	//終了
	//=======================================
	function exit1(){
		msg('終了');
		close();
	}
	//=======================================
	//データを再読込み
	//=======================================
	function reload(){
		msg('リロード');
		program_dir_read();
	}
	//=======================================
	//プログラム編集
	//=======================================
	function file_edit(){
		msg('編集');
		if(ListView1.SelCount == 0){
			return;
		}
		var path = dorothy2_program + ListView1.Items[ListView1.Selected.Index].filename + '.dms';
		DorothySetting.edit (path);
	}
	//=======================================
	//プログラム編集（userフォルダも編集)
	//=======================================
	function user_edit(){
		msg('user編集');

		//program
		if(ListView1.SelCount == 0){
			return;
		}
		var path = dorothy2_program + ListView1.Items[ListView1.Selected.Index].filename + '.dms';
		DorothySetting.edit (path);

		//user
		var path = dorothy2_path + 'user\' + ListView1.Items[ListView1.Selected.Index].filename;
		var dir = new Directory(path);
		if(!dir.exists()){
			return;
		}
		var f = dir.findFirstFile('*.*');
		while(f != null){
			if(f.match(/\.dms$|\.bat$|\.hta$|\.html?$/)){
				DorothySetting.edit (path + '\' + f);
			}
			f = dir.findNextFile();
		}
		dir.findClose();

		//設定用
		var path = dorothy2_setting + ListView1.Items[ListView1.Selected.Index].filename + '.set';
		if(new File(path).exists()){
			DorothySetting.edit (path);
		}

		//ドキュメント
		var path = dorothy2_document + 'program\' + ListView1.Items[ListView1.Selected.Index].filename + '.txt';
		if(new File(path).exists()){
			DorothySetting.edit (path);
		}
	}
	//=======================================
	//ドキュメント作成
	//=======================================
	function new_doc(){
		msg('ドキュメント作成');
		if(ListView1.SelCount == 0){
			return;
		}
		var path = dorothy2_document + 'program\' + ListView1.Items[ListView1.Selected.Index].filename + '.txt';
		var f = new File(path);
		if(f.exists()){
			alert('既にファイルが存在しています！？');
			return;
		}
		try{
			f.open('w');
		}
		catch(e){
			alert(e);
		}
		finally{
			f.close();
			f = '';
		}
		DorothySetting.edit (path);
		selectItem();
	}
	//=======================================
	//ドキュメント編集
	//=======================================
	function edit_doc(){
		msg('ドキュメント編集');
		if(ListView1.SelCount == 0){
			return;
		}
		var path = dorothy2_document + 'program\' + ListView1.Items[ListView1.Selected.Index].filename + '.txt';
		DorothySetting.edit (path);
	}
	//=======================================
	//その他のscriptを作成
	//=======================================
	function etc_new(){
		msg('その他のscriptを作成');
		if(ListView1.SelCount == 0){
			var path = Dialog.openFile('その他のscriptを作成',　dorothy2_system_menu + '*.*');
		}
		else{
			var name = ListView1.Items[ListView1.Selected.Index].filename;
			var path = dorothy2_user + name + '\';
			var dir = new Directory(path);
			if(!dir.exists()){
				dir.make();
			}
			path = Dialog.openFile('その他のscriptを作成',　path + '*.*');
		}
		if(path == null){
			return;
		}
		var f = new File(path);
		if(f.extractExt() == '.dfm'){
			var path2 = dorothy2_path + 'system\Dialog\dialogEditor.dms';
			var f = file_load(path2);
			eval(f)('path' , path);
		}
		else{
			if(!f.exists()){
				try{
					f.open('w');
				}
				catch(e){
					alert(e);
				}
				finally{
					f.close();
					f = '';
				}
			}
			DorothySetting.edit (path);
		}
	}
	//=======================================
	//その他のscriptを開く
	//=======================================
	function etc_edit(){
		msg('その他のscriptを開く');
		if(ListView1.SelCount == 0){
			var path = Dialog.openFile('その他のscriptを開く',　dorothy2_system_menu + '*.*');
		}
		else{
			var name = ListView1.Items[ListView1.Selected.Index].filename;
			var path = dorothy2_user + name + "\\";
			var dir = new Directory(path);
			if(!dir.exists()){
				path = dorothy2_system_menu;
			}
			path = Dialog.openFile('その他のscriptを開く',　path + '*.*');
		}
		if(path == null){
			return;
		}
		var f = new File(path);
		if(!f.exists()){
			alert('ファイルが在りません');
			return;
		}
		if(f.extractExt() == '.dfm'){
			var path2 = dorothy2_path + 'system\Dialog\dialogEditor.dms';
			var f = file_load(path2);
			eval(f)('path' , path);
		}
		else{
			DorothySetting.edit (path);
		}
	}
	//===========================================================
	//Dorothy\system\menu\settingから設定メニューをセット
	//===========================================================
	function menu_setting_set(){
		var dir = new Directory(dorothy2_system_menu_setting);
		if(!dir.exists()){
			return;
		}
		menu_setting = new Object;
		var filename = dir.findFirstFile('*.dms');
		while(filename != null){
			if(filename.indexOf('.dms#') != -1){
				filename = dir.findNextFile();
				continue;
			}
			var hd = script_file_read(dir.path + filename);
			filename = filename.slice(0, filename.lastIndexOf('.'));
			menu_setting[filename] = new VCLMenuItem;
			menu_setting[filename].Caption = hd.caption;
			menu_setting[filename].Hint = hd.hint;
			menu_setting[filename].filename = filename;
			script1.add(menu_setting[filename]);
			menu_setting[filename].onClick = menu_setting_load;
			filename = dir.findNextFile();
		}
	}
	//===========================================================
	//Dorothy\system\menu\settingから設定メニューをロード実行
	//===========================================================
	function menu_setting_load(menuItem){
		msg('設定用script作成');
		if(ListView1.SelCount == 0){
			return;
		}
		var path = dorothy2_program + ListView1.Items[ListView1.Selected.Index].filename + '.dms';
		var header = script_file_read(path);
		var file = new File(dorothy2_system_menu_setting + menuItem.filename + '.dms');
		if(!file.exists){
			alert('メニューが見つからない');
			return;
		}
		var p = file_load(file);
		eval(p)(header);
		selectItem();
	}
	//=======================================
	//設定用script編集
	//=======================================
	function edit_setting(){
		msg('設定用script編集');
		if(ListView1.SelCount == 0){
			return;
		}
		var path = dorothy2_setting + ListView1.Items[ListView1.Selected.Index].filename + '.set';
		DorothySetting.edit (path);
	}
	//=======================================
	//全て選択
	//=======================================
	function edit_allset(){
		msg('全て選択');
		var i;
		for(i in ListView1.Items){
			ListView1.Items[i].Checked = true;
		}
	}
	//=======================================
	//全て解除
	//=======================================
	function edit_allreset(){
		msg('全て解除');
		var i;
		for(i in ListView1.Items){
			ListView1.Items[i].Checked = false;
		}
	}
	//=======================================
	//ファイルＤ＆Ｄ
	//=======================================
	function DD(sender,x,y,files){
		msg(files);
		var path = dorothy2_system + 'DDfile.dms';
		var p = file_load(path);
		eval(p)(files);
	}
	//=======================================
	//テキストＤ＆Ｄ
	//=======================================
	function DDurl(sender,x,y,url){
		msg(url);
		var path = dorothy2_system + 'DDtext.dms';
		var p = file_load(path);
		eval(p)(url);
	}
	//=======================================
	//ドキュメント
	//=======================================
	function getSelectedItem () {
		if (ListView1.SelCount == 0) {
			return null;
		}
		return ListView1.Items [ListView1.Selected.Index];
	}
	function doc2(){
		var item = getSelectedItem ();
		if (item) {
			DorothySetting.showProgramDocument (item.filename);
		}
	}
	//=======================================
	//デバッグモード
	//=======================================
	function debug_mode(){
		N8.Checked = !N8.Checked;
		mode.debug = N8.Checked;
	}
	//=======================================
	//デバッグモードをセット
	//=======================================
	function debug_set(){
		var ini = new Ini(dorothy2_system + 'Dorothy.ini');
		var section = 'mode';
		var ini_debug = ini.read(section , 'debug' , '0');
		if(ini_debug == '1'){
			N8.Checked = true;
		}
		else{
			N8.Checked =false;
		}
		mode.debug = N8.Checked;
	}
	//=================================================
	//Dorothy\system\menu\editからメニューをセット
	//=================================================
	function edit_set(){
		var ini = new Ini(dorothy2_system + 'Dorothy.ini');
		var section = 'mode';
		var keys = ini.readSection(section);
		var i;
		for(i in keys){
			var value = ini.read(section , keys[i] , '0') == '1';
			mode[keys[i]] = value;
		}
		
		var dir = new Directory(dorothy2_system_menu_edit);
		if(!dir.exists()){
			return;
		}
		menu_edit = Object;
		var name_list = Object;
		var filename = dir.findFirstFile('*.dms');
		while(filename != null){
			if(filename.indexOf('.dms#') != -1){
				filename = dir.findNextFile();
				continue;
			}
			var hd = script_file_read(dir.path + filename);
			filename = filename.slice(0, filename.lastIndexOf('.'));
			name_list[filename] = '1';
			menu_edit[filename] = new VCLMenuItem;
			menu_edit[filename].Caption = hd.caption;
			menu_edit[filename].Hint = hd.hint;
			menu_edit[filename].Checked = ini.read(section , filename , '0') == '1';
			menu_edit[filename].filename = filename;
			Edit2.add(menu_edit[filename]);
			menu_edit[filename].onClick = menu_edit_load;
			filename = dir.findNextFile();
		}
		for(i in keys){
			if(!name_list.hasKey([keys[i]])){
				mode.removeKey([keys[i]]);
			}
		}
	}
	//=================================================
	//Dorothy\system\menu\editからメニューをロード実行
	//=================================================
	function menu_edit_load(menuItem){
		var file = new File(dorothy2_system_menu_edit + menuItem.filename + '.dms');
		if(!file.exists){
			alert('メニューが見つからない');
			return;
		}
		var p = file_load(file);
		eval(p)();
	}
	//=================================================
	//Dorothy\system\menu\newからメニューをセット
	//=================================================
	function menu_new_set(){
		var dir = new Directory(dorothy2_system_menu_new);
		if(!dir.exists()){
			return;
		}
		menu_new = new Object;
		var filename = dir.findFirstFile('*.dms');
		while(filename != null){
			if(filename.indexOf('.dms#') != -1){
				filename = dir.findNextFile();
				continue;
			}
			var hd = script_file_read(dir.path + filename);
			filename = filename.slice(0, filename.lastIndexOf('.'));
			menu_new[filename] = new VCLMenuItem;
			menu_new[filename].Caption = hd.caption;
			menu_new[filename].Hint = hd.hint;
			menu_new[filename].filename = filename;
			New1.add(menu_new[filename]);
			menu_new[filename].onClick = menu_new_load;
			filename = dir.findNextFile();
		}
	}
	//=================================================
	//Dorothy\system\menu\newからメニューをロード実行
	//=================================================
	function menu_new_load(menuItem){
		var file = new File(dorothy2_system_menu_new + menuItem.filename + '.dms');
		if(!file.exists){
			alert('メニューが見つからない');
			return;
		}
		var p = file_load(file);
		eval(p)();
	}
	//=================================================
	//ステータスバーメッセージ
	//=================================================
	function msg(text){
		StatusBar1.SimpleText = text;
	}
	//=================================================
	//ステータスバーメッセージ2
	//=================================================
	function msg2(SBobj){
		var i,s;
		for(i in SBobj){
			s = s + i + '=' + SBobj[i] + " \n";
		}
		alert(StatusBar1.Hint);
		//StatusBar1.SimpleText = text;
	}
	//=================================================
	//バージョン情報
	//=================================================
	function ver_dsp(){
		var path = dorothy2_system_menu_help + 'ver.dms';
		var p = file_load(path);
		eval(p)();
	}
	//=================================================
	//ドキュメント
	//=================================================
	function help_doc(){
		var path = dorothy2_system_menu_help + 'document.dms';
		var p = file_load(path);
		eval(p)();
	}
}
//===========================
//
//===========================
class newForm(VCLForm){
	//--------------------
	//コンストラクタ
	//--------------------
	function newForm(){
		newFormDfm = file_load(dorothy2_system + 'Unit5.dfm');
		loadFromText(newFormDfm);
		var a = ListView1.Items.add();
		a.Caption = '標準';
	}
}
//===========================
//new
//===========================
function new_file(){
	var p = file_load(dorothy2_system + 'new\new_def.dms');
	eval(p)();
}

//=========================================================
//Dorothy\program からファイルを順番に読込む
//=========================================================
function program_dir_read(){
	var dir = new Directory(dorothy2_program);
	if(!dir.exists()){
		alert('初期設定を行ってください');
		exit();
	}
	var ini = new Ini(dorothy2_system + 'Dorothy.ini');
	var section = 'script';
	
	var i = 0 , j = 0;
	var filename = dir.findFirstFile('*.dms');
	form.ListView1.Items.clear();
	while(filename != null){
		if(filename.indexOf('.dms#') != -1){
			filename = dir.findNextFile();
			continue;
		}
		var hd = script_file_read(dir.path + filename);
		var checked = ini.read(section , filename ,'0');
		filename = filename.slice(0, filename.lastIndexOf('.'));
		var a = form.ListView1.Items.add();
		a.Checked = (checked == 1);
		a.Caption = hd.caption;
		a.filename = filename;
		a.priority = hd.priority;
		a.version = hd.version;
		a.author = hd.author;
		a.hint = hd.hint;
		a.SubItems.add(hd.priority);
		a.SubItems.add(hd.version);
		a.SubItems.add(hd.author);
		a.SubItems.add(hd.hint);

		filename = dir.findNextFile();
		i++;
		if(checked == 1){
			j++;
		}
	}
	form.StatusBar1.SimpleText = i + ' items (active ' + j + ')';
}

//Dorothy.ini からスクリプトの設定を読込む
function script_ini_read(){
	var path = dorothy2_path + 'system\Dorothy.ini';
	var ini =  new Ini(path);
	var scr = ini.readSection('script');
	var i;
	var ans = new Strings;
	var caption,chk,author,version,hint;
	var get;
	for(i in scr){
		chk = ini.read('script' , scr[i] , '0');
		get = script_file_read(scr[i]);
		var a = form.ListView1.Items.add();
		a.Caption = get.caption;
		a.SubItems.add(get.version);
		a.SubItems.add(get.author);
		a.SubItems.add(get.hint);
	}
}
//=========================================================
//プログラムファイルのヘッダを取込む
//=========================================================
function script_file_read(filename){
	var ans = new Object;
	ans.caption = '';
	ans.author = '';
	ans.version = '';
	ans.hint = '';
	ans.match = '';
	ans.priority = '';
	ans.editor = '';
	ans.path = '';
	ans.filename = '';

	var path = filename;
	var f = new File(path);
	if(!f.exists()){
		return ans;
	}
	ans.filename = f.extractName();
	ans.filename = ans.filename.slice(0,ans.filename.lastIndexOf('.'));
	try{
		f.open('r');
		var data = f.read();
		f.close();
	}
	catch(e){
		alert('file open error ' + path);
		exit();
	}
	if(!data.match(/^\/\/Dorothy2$(.+?)^\/\/end$/m)){
		return ans;
	}
	var programHead = RegExp.$1;
	if(programHead.match(/^\/\/author=(.*?)$/m)){
		ans.author = RegExp.$1;
	}
	if(programHead.match(/^\/\/caption=(.*?)$/m)){
		ans.caption = RegExp.$1;
	}
	if(programHead.match(/^\/\/version=(.*?)$/m)){
		ans.version = RegExp.$1;
	}
	if(programHead.match(/^\/\/hint=(.*?)$/m)){
		ans.hint = RegExp.$1;
	}
	if(programHead.match(/^\/\/match=(.*?)$/m)){
		ans.match = RegExp.$1;
	}
	if(programHead.match(/^\/\/priority=(.*?)$/m)){
		ans.priority = RegExp.$1;
	}
	if(programHead.match(/^\/\/editor=(.*?)$/m)){
		ans.editor = RegExp.$1;
	}
	return ans;
}


//----------------------------- DorothySetting -----------------------------

var DorothySetting = { };


// ファイルをテキストエディタで開く
DorothySetting.edit = function (file) {
  if(new File (file).exists ()) {
    Dorothy.edit (file);
  }
  else {
    alert ('ファイルがありません。');
  }
};


// 文字列が UTF-8 か調べる
DorothySetting._isUtf8 = function (s) {
  var sb = new StringBuffer (s);

  // 長い UTF-8 文字列で非常に時間がかかってしまうので
  // 適当なところで打ち切る
  var len = Math.min (sb.length, 1000);

  sb.append (String.fromCharCode (0xff));

  for (var i = 0; i < len; ) {
    var cc = sb.charCodeAt (i++);

    if (cc <= 0x7f) {
      continue;
    }
    if ((cc <= 0xc1) || (0xf8 <= cc)) {
      return false;
    }

    // UTF-8 の2バイト目以降の値として正しいか
    var bytes = (cc <= 0xdf) ? 1 : (cc <= 0xef) ? 2 : 3;
    do {
      cc = sb.charCodeAt (i++);
      if ((cc < 0x80) || (0xbf < cc)) {
        return false;
      }
    } while (--bytes);
  }

  return true;
};


// テキストファイルを読み込んで返す
// 中身が UTF-8 の場合は Shift_JIS に変換する
DorothySetting.loadFileToSJIS = function (file) {
  var s = file_load (file);
  return this._isUtf8 (s) ? s.fromUTF8toSJIS () : s;
};


// テキスト表示用のフォーム定義
DorothySetting._textFormDfm = "
object Form4: TForm4
  Left = 227
  Top = 142
  Width = 618
  Height = 479
  Caption = 'Form4'
  Color = clBtnFace
  Font.Charset = SHIFTJIS_CHARSET
  Font.Color = clWindowText
  Font.Height = -12
  Font.Name = 'ＭＳ Ｐゴシック'
  Font.Style = []
  OldCreateOrder = False
  DesignSize = (610 452)
  PixelsPerInch = 96
  TextHeight = 12
  object Memo1: TMemo
    Left = 0
    Top = 0
    Width = 609
    Height = 449
    Anchors = [akLeft, akTop, akRight, akBottom]
    Font.Charset = SHIFTJIS_CHARSET
    Font.Color = clWindowText
    Font.Height = -16
    Font.Name = 'ＭＳ Ｐゴシック'
    Font.Style = []
    ParentFont = False
    ScrollBars = ssBoth
    TabOrder = 0
  end
end";

// テキスト表示用のフォームを作成
DorothySetting.createTextForm = function (title) {
  var form = new VCLForm (true);
  form.loadFromText (this._textFormDfm);

  if (title) {
    form.Caption = title;
  }

  return form;
};


// テキストファイルを表示
DorothySetting.showTextFile = function (file, title) {
  var form = this.createTextForm (title);
  var t = this.loadFileToSJIS (file);

  form.Memo1.Lines.assign (t);
  form.showModal ();
};


// program のドキュメントを表示
DorothySetting.showProgramDocument = function (name) {
  var file = Dorothy.path + 'document\program\' + name + '.txt';
  this.showTextFile (file, name);
};


//---------------------------- OnMainMenuClick -----------------------------

// メインメニューのクリックイベント
function OnMainMenuClick (irvine, action) {
  // グローバル変数として参照できるようにする
  Irvine = irvine;
  Action = action;


  // Dorothy2R_a.dms 実行
  (function () {
    var f = new File (WScript.Path + 'scripts\Dorothy2R_a.dms');
    try {
      f.open ('r');
      eval ('(function(){' + f.read () + '})()');
      f.close ();
    }
    catch (e) {
      f.close ();
      alert (e + "\n" + f.path);
      exit ();
    }
  }) ();


  // xor.dms の代替
  extractFilePath = function (path) {
    return (new File (path)).extractDir ();
  };


  // パス名変数の定義
  function defineDorothy2Path () {
    dorothy2_path = Dorothy.path;
    dorothy2_temp = Dorothy.temp;
    dorothy2_document    = dorothy2_path + 'document\';
    dorothy2_common      = dorothy2_path + 'common\';
    dorothy2_program     = dorothy2_path + 'program\';
    dorothy2_setting     = dorothy2_path + 'setting\';
    dorothy2_system      = dorothy2_path + 'system\';
    dorothy2_project     = dorothy2_path + 'project\';
    dorothy2_projectdata = dorothy2_path + 'projectdata\';
    dorothy2_bin         = dorothy2_path + 'bin\';
    dorothy2_user        = dorothy2_path + 'user\';
    dorothy2_system_menu         = dorothy2_system + 'menu\';
    dorothy2_system_menu_new     = dorothy2_system_menu + 'new\';
    dorothy2_system_menu_setting = dorothy2_system_menu + 'setting\';
    dorothy2_system_menu_edit    = dorothy2_system_menu + 'edit\';
    dorothy2_system_menu_project = dorothy2_system_menu + 'project\';
    dorothy2_system_menu_tool    = dorothy2_system_menu + 'tool\';
    dorothy2_system_menu_set     = dorothy2_system_menu + 'set\';
    dorothy2_system_menu_package = dorothy2_system_menu + 'package\';
    dorothy2_system_menu_help    = dorothy2_system_menu + 'help\';
    dorothy2_system_ini          = dorothy2_system + 'ini\';

    irvine_script_path = WScript.Path + 'scripts\';
  }


  // setting.ini の値を Dorothy オブジェクトに読み込む
  Dorothy._loadSettingIni = function () {
    // 基本フォルダ設定
    Dorothy.path = WScript.Path + 'Dorothy2\';
    Dorothy.programDir = Dorothy.path + 'program\';


    // setting.ini は存在しない可能性があるので read の第3引数は省略しないこと
    var ini = new Ini (Dorothy.path + 'system\setting.ini');
    function usr (key) {
      return ini.read ('user', key, '');
    }
    Dorothy.temp = usr ('temp') || Dorothy.path + 'temp\';

    // system\menu\〜.dms で USER_NAME が使われている
    USER_NAME = Dorothy.userName = usr ('name');

    // Dorothy2R 拡張
    Dorothy.nulUrl = usr ('nulurl');
    Dorothy.nulProxy = usr ('nulproxy');


    // 圧縮・展開ツール
    COMPRESSION = ini.read ('arc', 'compression', '');
    EXTRACT = ini.read ('arc', 'extract', '');


    // ウィンドウ位置
    function win (key, def) {
      return ini.read ('window', key, def);
    }
    var sf = win ('sizeflg', '') == '1';
    if (sf) {
      Width = win ('width', Width);
      Height = win ('height', Height);
    }
    var pf = win ('positionflg', '') == '1';
    if (pf) {
      Position = 'poDesigned';
      Left = win ('left', Left);
      Top = win ('top', Top);
    }


    // Dorothy2set.dms 0.19 で追加された common 置き換え機能
    Dorothy.common_sp = ini.read ('common', 'common_sp', '') == '1';
    Dorothy.common_show = ini.read ('common', 'common_show', '') == '1';
    Dorothy.common_name = ini.read ('common', 'common_name', '');
  };


  // Dorothy オブジェクト初期化
  function ev () { eval (arguments [0]); }
  Dorothy.init ({ version: 'xxxx', eval: ev });
  Dorothy.rVersion = 20140718;

  Dorothy._loadSettingIni ();
  defineDorothy2Path ();


  debug = false;
  mode = { };

  form = new SettingForm (true);
  println = function (s) {
    form.msg (s);
  };

  program_dir_read ();
  form.showModal ();
}


// メニューの更新イベント
function OnMenuUpdate (irvine, action) {
}


// EOF
