//Dorothy2
//caption=ドキュメント
//version=20140926.0
//hint=
//match=
//author=rentan
//path=system\menu\help
//end

/*
Copyright (C) 2014 rentan at rentan.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


function (file) {
  var docView = this._documentForm;

  // 表示中ならそれをアクティブにする
  if (docView) {
    docView.showFile (file);
    docView.setFocus ();
    return;
  }

  docView = this._documentForm = new VCLForm (true);

  var dfm = file_load (dorothy2_system_menu_help + 'doc.dfm');
  dfm = dfm.replace (/^\s*object\s+Splitter2:\s*TSplitter.*?^\s*end\s*$/mg, '');
  dfm = dfm.replace (/^\s*object\s[^:]*:\s*TRadioButton.*?^\s*end\s*$/mg, '');

  docView.loadFromText (dfm);
  docView._settingForm = this;


  // ツリーリストが変更されたらファイルの中身をテキスト表示する
  docView.TreeView1.onChange = function (sender, node) {
    var s = '';
    if (File.exists (node.path)) {
      var s = this.parent._settingForm.loadFileToSJIS (node.path);
    }

    this.parent.Memo1.Lines.assign (s);
  };

  // フォームが閉じられたら参照を削除する
  docView.onClose = function () {
    // SettingForm から docView への参照を削除
    this._settingForm._documentForm = null;

    // docView から SettingForm への参照を削除
    this._settingForm = null;
  };


  // 指定したファイルを表示する
  docView.showFile = function (file) {
    if (!file) {
      return;
    }

    var items = this.TreeView1.Items;
    var len = items.Count;

    for (var i = 0; i < len; ++i) {
      if (items [i].path == file) {
        this.TreeView1.Selected = items [i];
        return;
      }
    }
  };


  // TreeView1 にノードを追加
  function add (node, name, path) {
    var items = docView.TreeView1.Items;

    var childNode = node ? items.addChild (node, name) : items.add (node, name);
    childNode.path = path;

    return childNode;
  }

  // フォルダ内のフォルダとファイルを追加する
  function getDocuments (path, node) {
    var dir = new Directory (path);

    if (!dir.exists ()) {
      alert ('フォルダがありません。');
      return;
    }

    var ignoreFiles = new Strings ();

    var dirs = dir.directories;
    for (var i = 0; i < dirs.length; ++i) {
      var d = dirs [i];
      var f = d + '.txt';
      ignoreFiles.add (f);

      var name = d.replace (/^.*\\/, '');
      var childNode = add (node, name, f);

      getDocuments (d, childNode);
    }

    var files = dir.files;
    for (i = 0; i < files.length; ++i) {
      var f = files [i];
      if (ignoreFiles.indexOf (f) >= 0) {
        // フォルダクリック時に表示するファイルとして登録済
        continue;
      }

      var name = f.replace (/^.*\\(.+?)(\.txt)?$/, '$1');
      var childNode = add (node, name, f);
    }
  }

  getDocuments (this.DOCUMENT, null);

  docView.showFile (file);
  docView.show ();
  eventLoop ();
}


// EOF
