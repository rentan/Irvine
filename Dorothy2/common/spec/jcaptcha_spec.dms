//Dorothy2
//caption=JCaptcha spec
//version=20140605.0
//hint=http://yasmine.dorothy.test/common/spec/jcaptcha_spec.dms
//match=
//author=rentan
//path=common\spec
//end

//†xyzzy文字化け回避


/*
Copyright (C) 2014 rentan at rentan.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


common_load ('jcaptcha', 'htmlform', 'http');


describe ('JCaptcha', function () {
  it ('new JCaptcha()', function () {
    var cap = new JCaptcha ();

    expect (cap.provider).toBeNull ();
    expect (cap.query).toBeNull ();
  });
});


// 2014-06-05 現在、ものすごく難しい文字が出てきてしまう
var reCAPTCHAdemo = {
  url: 'http://www.google.com/recaptcha/demo/',
  key: '6Ld4iQsAAAAAAM3nfX_K0vXaUudl2Gk0lpTF3REf'
};


describe ('.init(), .input()', function () {
  it ('reCAPTCHA at google demo', function () {
    var http = new Http ();
    expect (http.get (reCAPTCHAdemo.url)).toBe (true);

    var form = (new HtmlForms (http)).getFormByMethod ('POST');
    expect (form).not.toBeNull ();

    var cap = new JCaptcha ();

    // JCaptcha 内蔵簡易ルーチンを使用
    cap.internal = true;

    expect (cap.init ('reCAPTCHA', { key: reCAPTCHAdemo.key })).toBe (true);

    var props = {
      provider: 'reCAPTCHA',
      challengeName: 'recaptcha_challenge_field',
      challengeValue: '',
      responseName: 'recaptcha_response_field',
      responseValue: 'manual_challenge',

      textareaName: 'recaptcha_challenge_field',
      textareaValue: null
    };

    expect (cap).toEqual (jasmine.objectContaining (props));

    expect (cap.input ('reCAPTCHA')).toBe (true);
    expect (cap.query).toEqual (jasmine.any (String));
    println ('---> ' + cap.query);
  });
});


describe ('.analyzeForm(), .inputForm()', function () {
  it ('reCAPTCHA at google demo', function () {
    var http = new Http ();

    expect (http.get (reCAPTCHAdemo.url)).toBe (true);

    var form = (new HtmlForms (http)).getFormByMethod ('POST');
    expect (form).not.toBeNull ();

    var cap = new JCaptcha ();

    // common\reCaptcha.dms を使用
    cap.internal = false;

    expect (cap.analyzeForm (form)).toBe (true);
    expect (cap.provider).toBe ('reCAPTCHA');

    // デモページで使っているキーが変更される可能性あり
    expect (cap.key).toBe (reCAPTCHAdemo.key);

    expect (cap.inputForm ()).toBe (true);

    expect (http.exec (form.submit ())).toBe (true);
    // http.capture ();

    var err = null;
    if (/action="">([A-Z!\?]+)/i.test (http.data)) {
      var q = RegExp.$1;
      if (q == 'Correct!' || q == '?????') {
        err = null;
      }
      else if (q == 'Incorrect!') {
        err = '不正解';
      }
      else {
        http.capture ();
        err = '結果が判定できません: ' + q;
      }
    }
    else {
      http.capture ();
      err = '結果が見つかりません。';
    }

    expect (err).toBe (null);
  });
});


describe ('SolveMedia', function () {
  it ('rapidgator', function () {

    var rapidgator_solvemedia_src = '
<form id="captchaform" action="/download/captcha" method="post">
  <strong style="color:red"></strong><br/>
  <label for="DownloadCaptchaForm_captcha"></label>
  <input name="DownloadCaptchaForm[captcha]" id="DownloadCaptchaForm_captcha" type="hidden" />
  <script type="text/javascript" src="http://api.solvemedia.com/papi/challenge.script?k=oy3wKTaFP368dkJiGUqOVjBR2rOOR7GR"></script>
  <noscript>
    <iframe src="http://api.solvemedia.com/papi/challenge.noscript?k=oy3wKTaFP368dkJiGUqOVjBR2rOOR7GR" height="300" width="500" frameborder="0"></iframe><br/>
    <textarea name="adcopy_challenge" rows="3" cols="40"></textarea>
    <input type="hidden" name="adcopy_response" value="manual_challenge"/>
  </noscript>
  <div style="width: 173px; padding-left: 7px;">
    <a href="#" class="btn" onclick="document.forms.captchaform.submit();"> <span> 送る </span> </a>
  </div>
</form>
';

    var http = new Http ();
    http.baseUrl = 'http://rapidgator.net/download/captcha';
    http.data = rapidgator_solvemedia_src;

    var form = (new HtmlForms (http)).getFormById ('captchaform');
    expect (form).not.toBeNull ();

    var cap = new JCaptcha ();
    expect (cap.analyzeForm (form)).toBe (true);

    var props = {
      provider: 'SolveMedia',
      challengeName: 'adcopy_challenge',
      challengeValue: '',
      responseName: 'adcopy_response',
      responseValue: 'manual_challenge',

      textareaName: 'adcopy_challenge',
      textareaValue: null
    };

    expect (cap).toEqual (jasmine.objectContaining (props));

    expect (cap.inputForm (form)).toBe (true);
    expect (cap.query).toEqual (jasmine.any (String));
    println ('---> ' + cap.query);
  });
});


// EOF
