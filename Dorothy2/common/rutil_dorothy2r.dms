//Dorothy2
//caption=Dorothy2R 互換拡張
//version=20160411.0
//hint=part of rutil.dms
//match=
//author=rentan
//path=common
//end

/*
Copyright (C) 2014-2016 rentan at rentan.org
Copyright (C) 2016 wan <thewanwan111@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

(function () {


// (Dorothy2R 拡張) DOA からの実行かどうか
Dorothy.isDOA = (typeof frmDOA == 'object' && nameOf (frmDOA) == 'VCLForm');


// (Dorothy2R 拡張) ファイルをテキストエディタで開く
Dorothy.edit = function (file) {
  var god = typeof Irvine == 'object';

  var ed = god ? Irvine.GetOptionData ('general', 'editor') : optiondata.Editor;
  var opt = god ? Irvine.GetOptionData ('general', 'editoroption') : optiondata.EditorOption;

  if (!ed) {
    ed = 'notepad.exe';
    opt = '';
  }

  return Win32.shellExecute ('open', '"' + ed + '"', opt + '"' + file + '"');
};


// (Dorothy2R 拡張) 保存フォルダ名を取得する
Dorothy.getSaveFolder = function () {
  var ip = item.folder;
  if (/^[a-z]:/i.test (ip)) {
    // アイテム設定が絶対パス
    return (new Directory (ip)).path;
  }

  var fp = folderdata.folder;
  if (/^[a-z]:/i.test (fp)) {
    // フォルダ設定が絶対パス
    return (new Directory ((new Directory (fp)).path + ip)).path;
  }

  var ini = new Ini ((new irvinePath ()).queue + 'queue.ini');
  var qp = ini.read ('queue', 'folder', '');
  return (new Directory (new Directory (qp + fp)).path + ip).path;
};


// (Dorothy2R 拡張) 保存フォルダ内にフォルダを作成する
Dorothy.createSaveFolder = function (path) {
  if (!/^[a-z]:/i.test (path)) {
    // 相対パス
    path = Dorothy.getSaveFolder () + path;
  }

  var d = new Directory (path);
  if (!d.exists()) {
    println ('new directory>' + d.path);
    d.make ();
  }

  return d.path;
};


// (Dorothy2R 拡張) item.filename を返す
Dorothy.getItemFilename = function () {
  // '[[rename]]' が含まれている場合は指定されていないものと見なす
  // if (item.filename.indexOf ('[[rename]]') >= 0) {
  //   reutrn '';
  // }

  return item.filename;
};


// (Dorothy2R 拡張) URL を設定する
Dorothy.setUrl = function (url, referer) {
  urlinfo.url = url;
  headers.Host = (new URL (url)).host;
  headers.Cookie = '';

  headers.Referer = referer || '';
};


// (Dorothy2R 拡張) ファイル名を設定する
Dorothy.setFilename = function (filename) {
  println ('new filename>' + filename);
  item.filename = filename;
};


// (Dorothy2R 拡張) OnDoneThread で変更するファイル名を設定する
Dorothy.setFinalName = function (finalName, filename, charset, itemData) {
  charset = charset || 'utf-8';
  itemData = itemData || item;

  if (filename) {
    Dorothy.setFilename (filename);
  }

  var oldComment = itemData.hasKey ('Comment') ? itemData.Comment : '';

  var fn = 'finalName=' + charset + ':' + Base64.encode (finalName) + ';';
  var re = /(^|;)\s*finalName\s*=\s*[^;]*;?/;
  itemData.Comment = fn + oldComment.replace (re, '$1');
};


// (Dorothy2R 拡張) OnDoneThread で変更するファイル名を取得する
Dorothy.getFinalName = function (itemData) {
  itemData = itemData || item;
  var r = { charset: '', name: '', b64: '' };
  if (itemData.hasKey ('Comment') && /(^|;)\s*finalName\s*=\s*([^:]+):([^;]+)/.test (itemData.Comment)) {
    r.charset = RegExp.$2;
    r.b64 = RegExp.$3;
    r.name = Base64.decode (RegExp.$3);
  }
  return r;
};


// (Dorothy2R 拡張) オプションを追加する
Dorothy.addOption = function (s, itemData) {
  var iid = itemData || item;
  if (s) {
    var c = iid.hasKey ('Comment') && iid.Comment;
    iid.Comment = c ? s + ';' + c : s;
  }
};


// (Dorothy2R 拡張) オプションを取得する
Dorothy.getOption = function (key, itemData) {
  var re = new RegExp ('(^|;)' + key + '=([^;]*)');

  if (itemData) {
    return (itemData.hasKey ('Comment') && re.test (itemData.Comment)) ? re.$2 : null;
  }
  return (re.test (item.Comment) || re.test (folderdata.Post)) ? re.$2 : null;
};


// (Dorothy2R 拡張) common ファイルの必要バージョンを設定する
Dorothy._requiredCommonVersion = { };
Dorothy.setRequiredCommonVersion = function (obj) {
  var rcv = Dorothy._requiredCommonVersion;

  for (var key in obj) {
    if (!rcv.hasKey (key) || (rcv [key] < obj [key])) {
      rcv [key] = obj [key];
    }
  }
};


// common_xload() にバージョンチェックを組み込む
common_xload = (function (common_xload) {
  return function (name) {
    var n = name.replace (/\//g, '\');

    common_xload (n);

    var rcv = Dorothy._requiredCommonVersion;
    var old = rcv.hasKey (n) && !(rcv [n] <= parseFloat (Dorothy.common [n].version));

    if (old) {
      Util.fatal ("バージョンが古すぎます。最新版を使用して下さい。\n\n"
                + Dorothy.path + 'common\' + n + '.dms');
    }
  };
}) (common_xload);


// (Dorothy2R 拡張) 現在のアイテムをダウンロード後削除する
Dorothy.removeThis = function () {
  Dorothy.fileName = 'remove';
  Dorothy.setUrl ('http://www.google.com/favicon.ico');
};


//------------------- Dorothy2 本体のバージョンチェック --------------------


var DorothyVersionValidator = { };

DorothyVersionValidator.old = function (version) {
  var name = WScript.ScriptName;

  var s = version ? name + " version " + version + "\n\n" : '';
  s += name + " のバージョンが古すぎます。\n" +
       "Dorothy2 の最新版を使用して下さい。";

  Util.fatal (s);
};

// DOA.dms
DorothyVersionValidator.doa = function () {
  Util.fatal ("このスクリプトは DOA では使用できません。");
};

// Dorothy2set.dms
DorothyVersionValidator.dorothy2set = function () {
  if (!Dorothy.hasKey ('common_sp')) {
    this.old ();
  }
};

// Dorothy2ListMenu.dms
DorothyVersionValidator.dorothy2listmenu = function () {
  if (!Dorothy.hasKey ('common_sp')) {
    this.old ();
  }
};

// Dorothy2A.dms
DorothyVersionValidator.dorothy2a = function () {
  var ver = parseFloat (Dorothy.version);

  if (!isFinite (ver) || ver < 0.32) {
    this.old (Dorothy.version);
  }
};

DorothyVersionValidator.validate = function () {
  if (typeof Dorothy != 'object') {
    this.old ();
  }

  if (Dorothy.isDOA) {
    this.doa ();
  }
  else if (Dorothy.version == 'xxxx') {
    if (typeof OnMainMenuClick == 'function') {
      this.dorothy2set ();
    }
    else if (typeof OnListMenuClick == 'function') {
      this.dorothy2listmenu ();
    }
  }
  else {
    this.dorothy2a ();
  }
};

DorothyVersionValidator.validate ();


}) ()


// EOF
