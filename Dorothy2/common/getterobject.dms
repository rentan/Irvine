//Dorothy2
//caption=GetterObject.*
//version=20140816.0
//hint=
//match=
//author=rentan
//path=common
//end

/*
Copyright (C) 2014 rentan at rentan.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

(function () {


// コンテナ
GetterObject = {

  // .get() の戻り値
  OK: 0,
  NG: 1,
  RETRY: 2,
  UNKNOWN: 3,
  MIS: 4,


  comment: '',
  http: null,


  // 内部で使用: メッセージ表示&commentに保存
  _p: function (s) {
    println (this.comment = nameOf (this) + ': ' + s);
    return false;
  },


  // 内部で使用: エラー終了系
  _ng: function (s) {
    this._p (s);
    return this.NG;
  },

  _unknown: function (s) {
    this._p (s);
    return this.UNKNOWN;
  },

  _mis: function (s) {
    this._p (s || '未対応の URL です。');
    return this.MIS;
  },

  // 内部で使用: HTTP アクセスでエラーした場合の戻り値の選択
  _httpError: function () {
    var http = this.http;

    var c = http && http.code;
    if (c) {
      this.comment = http.statusLine;
    }

    return (c == 0 || c == 503) ? this.RETRY : this.NG;
  },


  // .get() の戻り値に応じて終了処理
  end: function (r) {
    if (r == this.RETRY) {
      return retry ();
    }
    if (r != this.OK && r != this.MIS) {
      exit ();
    }
  },


  // URL を追加して正常終了
  _add: function (url) {
    this.urls.push (url);
    return this.OK;
  }

};


// オブジェクトの prototype にプロパティ、メソッドを登録する
GetterObject.expand = function (obj) {
  var p = obj.prototype;

  var props = [
    'OK',
    'NG',
    'RETRY',
    'UNKNOWN',
    'MIS',
    'comment',
    'http',
    '_p',
    '_ng',
    '_unknown',
    '_httpError',
    '_add',
    'end'
  ];

  for (var i = 0; i < props.length; ++i) {
    var key = props [i];
    p [key] = this [key];
  }
};


}) ()


// EOF
