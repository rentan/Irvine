//Dorothy2
//caption=instagram_r
//version=20150505.0
//hint=Instagram 別バージョン
//match=^https://instagram\.com/p/.
//author=rentan
//path=program
//priority=500
//end

/*
Copyright (C) 2015 rentan at rentan.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

function (scriptMode) {

  common_load ('rutil', 'additem', 'namebuilder');
  Util.min_version (20150316.0);

  var defaultIni = {
    AddItem: AddItem.prototype.iniTemplate,
    General: {
      Zen2Han: false
    },
    Filename: {
      Photo: 'instagram_%ID%',
      Video: 'instagram_%ID%'
    }
  };


//------------------------------- Instagram --------------------------------


common_load ('getter', 'http', 'utf8');


// コンストラクタ
Getter (function Instagram () {
});


// public: ファイル URL を取得する
Instagram.prototype.get = function (url) {
  this.items = [ ];
  this.type = null;

  this.twitter_id = null;
  this.id = null;
  this.title = null;

  var u = url.replace (/^http:/, 'https:')
             .replace (/^https:\/\/instagr\.am\//, 'https://instagram.com/')
             .replace (/[?#].*$/, '');

  var path = (new URL (u)).path.slice (1);
  if (!/^p\/([^\/]+)/.test (path)) {
    return this._mis ();
  }
  this.id = RegExp.$1;

  var http = this.http = new Http ();
  if (!http.get (url)) {
    return this._httpError ();
  }

  // Twitter ID
  if (!/"owner":\{([^}]*,)?"username":"([^"]+)"/.test (http.data)) {
    return this._unknown ('username が見つかりません。');
  }
  this.twitter_id = RegExp.$2;

  // 題名
  var title = 'no-title';
  if (/"caption":"([^"]+)"/.test (http.data)) {
    title = (new Utf8 (RegExp.$1)).unescape ().toUTF8 ();
  }
  this.title = title;

  // 画像URL
  if (!/<meta\s+property="og:image"\s+content="([^"]+)"/.test (http.data)) {
    return this._unknown ('画像URLが見つかりません。');
  }
  this._add ({ Url: RegExp.$1 });
  this.type = 'Photo';

  // 動画URL (画像ファイルもダウンロードする)
  if (/<meta\s+property="og:video"\s+content="([^"]+)"/.test (http.data)) {
    this._add ({ Url: RegExp.$1 });
    this.type = 'Video';
  }

  return this._ok ();
};


// public: ファイル名を生成する
//   NameBuilder 指定時は必ず Format も指定すること。
Instagram.prototype.buildFilename = function (args) {
  var nb = args.hasKey ('NameBuilder') && args.NameBuilder;
  if (!nb) {
    return this._ok ();
  }

  nb.twitter_id = this.twitter_id;
  nb.id = this.id;
  nb.title = new Utf8 (this.title);

  return this._buildFilename (args);
};


// public: ダウンロード情報を登録する
Instagram.prototype.download = function (args) {
  return this._downloadFiles (args);
};


//------------------------------- メイン処理 -------------------------------


  if (scriptMode === 'DEFINE_ONLY') {
    return;
  }

  var ini = Util.ini_load (defaultIni);

  var getter = new Instagram ();

  if (getter.get (urlinfo.url)) {
    var nb = new NameBuilder ({ zen2han: ini.General.Zen2Han });

    getter.buildFilename ({
      NameBuilder: nb,
      Format: [ ini.Filename.Photo, ini.Filename.Video ]
    });

    getter.download ({
      AddItem: new AddItem (ini.AddItem)
    });
  }

  getter.end ();
}


// EOF
