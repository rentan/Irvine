//Dorothy2
//caption=Ustream/recorded
//version=20140917.0
//hint=録画データのみ
//match=^http://www\.ustream\.tv/recorded/\d+
//author=rentan
//path=program
//priority=500
//end

/*
Copyright (C) 2012,2014 rentan at rentan.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

function (scriptMode) {

  common_load ('rutil', 'namebuilder');

  // 設定ファイルの読み込み
  var default_ini = {
    General: {
      Zen2Han: true
    },
    Filename: {
      Recorded: '%TITLE% ust_%ID%'
    }
  };
  var ini = Util.ini_load (default_ini);


//---------------------------- UstreamRecorded -----------------------------


common_load ('getterobject', 'http', 'utf8');


// コンストラクタ
void function UstreamRecorded () {
  this.urls = [ ];
};


GetterObject.expand (UstreamRecorded);


UstreamRecorded.prototype.id = null;
UstreamRecorded.prototype.title = null;


// 内部で使用: 視聴ページを取得して解析する
UstreamRecorded.prototype._scanWatchPage = function (url) {
  var http = this.http = new Http ();

  if (!http.get (url)) {
    return this._httpError ();
  }

  if (!/<meta\s+property="og:title"[^>]*content="([^"]+)"/.test (http.data)) {
    return this._unknown ('タイトルが見つかりません。');
  }
  this.title = (new Utf8 (RegExp.$1)).decodeCharRef ();

  return this.OK;
};



// ファイル URL を取得する
UstreamRecorded.prototype.get = function (url) {
  this.urls = [ ];
  this.id = '';
  this.title = '';

  if (!/^\/recorded\/(\d+)([?#].*)?$/.test ((new URL (url)).path)) {
    return this._mis ();
  }
  this.id = RegExp.$1;

  var r = this._scanWatchPage (url);
  if (r != this.OK) {
    return r;
  }

  var http = this.http = new Http ();

  var u = 'http://tcdn.ustream.tv/video/' + this.id;
  var loc = http.getLocation (u);
  if (!loc) {
    return this._httpError ();
  }

  return this._add ({ Url: loc });
};


// ダウンロード情報を Dorothy 側に設定する
UstreamRecorded.prototype.setUrlAndFilename = function (nb, fmt) {
  var item = this.urls [0];
  Dorothy.setUrl (item.Url);

  nb.id = this.id;
  nb.title = this.title;
  nb.setFilename (fmt, item.Url);
};


//------------------------------- メイン処理 -------------------------------


  var getter = new UstreamRecorded ();

  var r = getter.get (urlinfo.url);
  if (r != getter.OK) {
    return getter.end (r);
  }

  var nb = new NameBuilder ({ zen2han: ini.General.Zen2Han });
  getter.setUrlAndFilename (nb, ini.Filename.Recorded);
}


// EOF
