//Dorothy2
//caption=twitter_r spec
//version=20150318.0
//hint=http://yasmine.dorothy.test/program/spec/twitter_r_spec.dms
//match=
//author=rentan
//path=program\spec
//end

//†xyzzy文字化け回避


/*
Copyright (C) 2014,2015 rentan at rentan.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


common_load ('esx\array');

// program\twitter_r.dms を読み込んで実行
eval (program_load ('twitter_r')) ('DEFINE_ONLY');


describe ('単一画像', function () {
  var url = 'https://twitter.com/rentan_org/status/314692285487001600';
  var imageUrl = 'https://pbs.twimg.com/media/BF4C92JCMAEHMR9.png:orig';

  var fmt = '%USER_NAME% [%TWITTER_ID%] - %TITLE% [%ID%] [%PIC_ID%] [%F%]';
  var filename = '練炭 [rentan_org] - ちょっとテスト。GlyphWiki より。 ' +
                 '[314692285487001600] [7kRfsb8rZn] [BF4C92JCMAEHMR9].png';

  var getter = new Twitter ();
  var nb = new NameBuilder ();

  it ('.get() 成功時に true / .OK を返す', function () {
    expect (getter.get (url)).toBe (true);
    expect (getter.status).toBe (getter.OK);
    expect (getter.type).toBe ('Photo');
  });

  it ('.items が [ { Url: ... } ] 形式', function () {
    expect (getter.items).toEqual ([ { Url: imageUrl } ]);
  });

  it ('.buildFilename() で .items にファイル名が追加される', function () {
    getter.buildFilename ({ NameBuilder: nb, Format: fmt });
    expect (getter.items).toEqual ([ { Url: imageUrl, Filename: filename } ]);
  });
});


describe ('単一画像(ツイート本文に別のツイートの画像 URL あり)', function () {
  var url = 'https://twitter.com/rentan_org/status/314692615671017472';
  var imageUrl = 'https://pbs.twimg.com/media/BF4DRELCcAAp1sI.png:orig';

  var fmt = '%USER_NAME% [%TWITTER_ID%] - %TITLE% [%ID%] [%PIC_ID%]';
  var filename = '練炭 [rentan_org] - ちょっとテスト その2。 pic.twitter.com／2g0roAlhG3 ' +
                 '[314692615671017472] [uGtcUO2tzT].png';

  var getter = new Twitter ();
  var nb = new NameBuilder ();

  it ('.get() 成功時に true / .OK を返す', function () {
    expect (getter.get (url)).toBe (true);
    expect (getter.status).toBe (getter.OK);
    expect (getter.type).toBe ('Photo');
  });

  it ('.items が [ { Url: ... } ] 形式', function () {
    expect (getter.items).toEqual ([ { Url: imageUrl } ]);
  });

  it ('.buildFilename() で .items にファイル名が追加される', function () {
    getter.buildFilename ({ NameBuilder: nb, Format: fmt });
    expect (getter.items).toEqual ([ { Url: imageUrl, Filename: filename } ]);
  });
});


describe ('複数画像', function () {
  var pageOrigin = 1;

  var url = 'https://twitter.com/rentan_org/status/468794536253083648';
  var imageUrls = [
    'https://pbs.twimg.com/media/BoF-JNxIUAATgXe.png:orig',
    'https://pbs.twimg.com/media/BoF-JRQIIAA_9Ay.png:orig',
    'https://pbs.twimg.com/media/BoF-JUpIEAAHhbV.png:orig',
    'https://pbs.twimg.com/media/BoF-JUmIUAA9Yqe.png:orig'
  ];

  var fmt = '%USER_NAME% [%TWITTER_ID%] - %TITLE% [%ID%] [%PIC_ID%] %P%of%PAGES%';
  var filenames = [ 0, 1, 2, 3 ].map (function (v) {
    return '練炭 [rentan_org] - 複数画像ツイートのテスト。 ' +
           '[468794536253083648] [L7uxMhCUMb] ' +
           (v + pageOrigin) + 'of4.png';
  });

  var getter = new Twitter ();
  var nb = new NameBuilder ({ definePPZ: pageOrigin });

  it ('.get() 成功時に true / .OK を返す', function () {
    expect (getter.get (url)).toBe (true);
    expect (getter.status).toBe (getter.OK);
    expect (getter.type).toBe ('Photo2');
  });

  it ('.items が [ { Url: ... }, ... ] 形式', function () {
    var urls = imageUrls.map (function (v) {
      return { Url: v };
    });

    expect (getter.items).toEqual (urls);
  });

  it ('.buildFilename() で .items にファイル名が追加される', function () {
    var urls = [ 0, 1, 2, 3 ].map (function (v) {
      return { Url: imageUrls [v], Filename: filenames [v] };
    });

    getter.buildFilename ({ NameBuilder: nb, Format: fmt });
    expect (getter.items).toEqual (urls);
  });
});


describe ('メディア', function () {
  var url = 'https://twitter.com/rentan_org/media';

  var getter = new Twitter ();

  it ('.get() 成功時に true / .OK を返す', function () {
    expect (getter.get (url)).toBe (true);
    expect (getter.status).toBe (getter.OK);
    expect (getter.type).toBeNull ();
  });

  it ('.items.length >= 30', function () {
    expect (getter.items.length).toBeGreaterThan (29);
  });

  cases ([
    // [ no, url ]
    [  1, 'https://twitter.com/rentan_org/status/146256880342282240' ],
    [  3, 'https://twitter.com/rentan_org/status/198840674177646592' ],
    [ 30, 'https://twitter.com/rentan_org/status/470484218963701760' ],
    [ 31, 'https://twitter.com/rentan_org/status/473809360666103808' ]
  ])
  .it ('.items が [ { Url: ... }, ... ] 形式 [ no, url ]', function (no, url) {
    var idx = getter.items.length - no;
    expect (getter.items [idx]).toEqual ({ Url: url });
  });
});


describe ('リプライツイートの画像', function () {
  var fmt = '%USER_NAME% [%TWITTER_ID%] - %TITLE% [%ID%] [%PIC_ID%]';

  var getter = null;
  var nb = new NameBuilder ();

  beforeEach (function () {
    getter = new Twitter ();
  });

  cases ([
    // [ url, image, filename ]
    [ 'https://twitter.com/fumi104/status/486724140196311040',
      'https://pbs.twimg.com/media/BsExBcSCMAAPDY8.jpg:orig',
      'fumi [fumi104] - @Melpomeneco ステラちゃんに伊東ライフされたい人生だった' +
      ' [486724140196311040] [FsJ7PoDYWX].jpg' ]
  ])
  .it ('[ url, image, filename ]', function (url, image, filename) {
    expect (getter.get (url)).toBe (true);
    expect (getter.status).toBe (getter.OK);
    expect (getter.type).toBe ('Photo');

    expect (getter.items).toEqual ([ { Url: image } ]);

    getter.buildFilename ({ NameBuilder: nb, Format: fmt });
    expect (getter.items).toEqual ([ { Url: image, Filename: filename } ]);
  });
});


describe ('Twitterアプリから投稿された動画', function () {
  var getter = null;

  beforeEach (function () {
    getter = new Twitter ();
  });

  cases ([
    // [ url, video ]
    [ 'https://twitter.com/twitter/status/560070183650213889',
      'https://video.twimg.com/ext_tw_video/560070131976392705/pu/vid/1280x720/c4E56sl91ZB7cpYi.mp4' ],

    [ 'https://twitter.com/ActuallyNPH/status/560049149836808192',
      'https://video.twimg.com/ext_tw_video/560049056895209473/pu/vid/720x720/S7F4BF2wKR2txCpA.mp4' ]
  ])
  .it ('[ url, video ]', function (url, video) {
    expect (getter.get (url)).toBe (true);
    expect (getter.status).toBe (getter.OK);
    expect (getter.type).toBe ('Video');

    expect (getter.items).toEqual ([ { Url: video } ]);
  });
});


// EOF
