//Dorothy2
//caption=YouTubeSig spec
//version=20141124.0
//hint=http://yasmine.dorothy.test/program/spec/youtube_info_sig_spec.dms
//match=
//author=rentan
//path=program\spec
//end

//†xyzzy文字化け回避


/*
Copyright (C) 2014 rentan at rentan.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


// program\youtube_info.dms を読み込んで実行
eval (program_load ('youtube_info')) ('DEFINE_ONLY');


describe ('YouTubeSig#calcDecipherPattern()', function () {

  // JavaScript をログに出力すると見づらくなるので、別に格納しておく
  var jsTable = {
    js0: "
var $n=null,co=null,ho=null,Vn=null,eo={},go=[];
var Fo={TR:function(a){a.reverse()},TU:function(a,b){var c=a[0];a[0]=a[b%a.length];a[b]=c},sH:function(a,b){a.splice(0,b)}};
function Go(a){a=a.split(\"\");Fo.sH(a,2);Fo.TU(a,28);Fo.TU(a,44);Fo.TU(a,26);Fo.TU(a,40);Fo.TU(a,64);Fo.TR(a,26);Fo.sH(a,1);return a.join(\"\")};
c&&(d.signature=Go(c));
return Zo(a,d)",

    js1: "
f.Iz=function(){this.ya=0;this.g&&this.g.call(this.j)};var $q={KF:function(a,b){a.splice(0,b)},Xm:function(a){a.reverse()},
BT:function(a,b){var c=a[0];a[0]=a[b%a.length];a[b]=c}};function ar(a){a=a.split(\"\");$q.BT(a,63);$q.KF(a,1);$q.Xm(a,43);
$q.BT(a,46);$q.KF(a,2);$q.Xm(a,0);$q.KF(a,3);return a.join(\"\")};function br(){};
c&&a.set(\"signature\",ar(c));return a}"

  };

  cases ([
    // [ js, pattern ]
    [ 'js0', 'c2s28s44s26s40s64rc1' ],
    [ 'js1', 's63c1rs46c2rc3' ]
  ])
  .it ('JavaScriptコードから復号データを算出する [ js, pattern ]', function (jsKey, pattern) {
    var yts = new YouTubeSig ();
    var pat = null;

    var js = jsTable [jsKey];

    expect (function () { pat = yts.calcDecipherPattern (js); }).not.toThrow ();
    expect (pat).toBe (pattern);
  });
});


describe ('YouTubeSig#decrypt()', function () {
  it ('signatureを復号する', function () {
    var s = 'D3D3AC2295B361FCAA6E79D8343C.8F9B85FF2BE993E4E32C38957C59DB98FB4681B7DF56C75BB9950EE';
    var sig = 'E0599BB57C65FD7B3864BF89BD95C75983C2FE4E.99EB2FF58B9D83C3438D97E6AACF163B5922CA31';

    var yts = new YouTubeSig ('c2s28s44s26s40s64rc1');

    expect (yts.decrypt (s)).toBe (sig);
  });

  it ('引数が空文字列なら空文字列を返す', function () {
    var yts = new YouTubeSig ();
    expect (yts.decrypt ('')).toBe ('');
  });
});


// EOF
