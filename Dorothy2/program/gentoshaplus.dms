//Dorothy2
//caption=幻冬舎plus
//version=20151231.0
//hint=野武士のグルメ
//match=^http://www\.gentosha\.jp/articles/-/\d+$
//author=rentan
//path=program
//priority=500
//end

/*
Copyright (C) 2013,2014,2015 rentan at rentan.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

function (scriptMode) {

  common_load ('rutil', 'additem', 'namebuilder');
  Util.min_version (20151206.0);

  var defaultIni = {
    AddItem: AddItem.prototype.iniTemplate,
    General: {
      Zen2Han: true,
      PageOrigin: 1
    },
    Filename: {
      Book:  '%SERIES% %VOL% %TITLE% p%PZ%'
    }
  };


//------------------------------ GentoshaPlus ------------------------------


common_load ('getter', 'http', 'utf8');


// コンストラクタ
Getter (function GentoshaPlus () {
});


// 記事の情報を抽出する
GentoshaPlus.prototype._getArticleInfo = function (http) {

  if (!/<div\s+id="(series|special)"[^>]*>\s*<span>([^<]+)/.test (http.data)) {
    return this._unknown ('<div id="series"> が見つかりません。');
  }
  this.series = (new Utf8 (RegExp.$2)).decodeCharRef ().toUTF8 ();

  if (!/<h2>([^<]+)/.test (http.data)) {
    return this._unknown ('<h2> が見つかりません。');
  }
  this.vol = (new Utf8 (RegExp.$1)).decodeCharRef ().toUTF8 ();

  if (!/<h1>([^<]+)/.test (http.data)) {
    return this._unknown ('<h1> が見つかりません。');
  }
  this.title = (new Utf8 (RegExp.$1)).decodeCharRef ().toUTF8 ();

  return this._ok ();
};


// ページ内の画像を抽出
GentoshaPlus.prototype._extractImages = function (http) {
  if (!/<div\s+id="article-body"[^>]*>(.*?)<!--\s*\/article-sns-service/.test (http.data)) {
    return this._unknown ('<div id="article-body"> が見つかりません。');
  }
  var html = RegExp.$1;

  var urls = [ ];

  function add (s, p1) {
    urls.push (http.expandUrl (p1));
    return '';
  }
  html.replace (/<img[^>]*?\ssrc="(\/mwimgs\/[^"]+)"/g, add);

  if (urls.length === 0) {
    return this._unknown ('画像が見つかりません。');
  }

  for (var i = 0; i < urls.length; ++i) {
    this._add ({ Url: urls [i] });
  }

  return this._ok ();
};


// 最後のページ(または単独ページ)か調べる
GentoshaPlus.prototype._isLastPage = function (http, page) {
  if (/<li\s+class="current">\s*\d+\s*<\/li>\s*<\/ul>/.test (http.data)) {
    return this._ok ();
  }

  if (page === 0 && /<p>&nbsp;<\/p>\s*<div\s+id="article-sns-service"/.test (http.data)) {
    return this._ok ();
  }

  return this._unknown ('次のページへのリンクが見つかりません。');
};


// ページを読み込んで解析
GentoshaPlus.prototype._analyze = function (url) {
  var http = this.http = new Http ();

  for (var page = 0;; ++page) {
    if (!http.get (url)) {
      return this._httpError ();
    }

    // 最初のページから各種情報を抽出
    if (page === 0) {
      if (!this._getArticleInfo (http)) {
        return false;
      }
    }

    if (!this._extractImages (http)) {
      return false;
    }

    if (/<li\s+class="next(\s[^"]*)?">\s*<a\s+href="(\/articles\/[^"]+)"/.test (http.data)) {
      // 次のページあり
      url = RegExp.$2;
      continue;
    }

    if (this._isLastPage (http, page)) {
      // 次のページなし
      break;
    }
    return false;
  }

  return this._ok ();
};


// public: ファイル URL を取得する
GentoshaPlus.prototype.get = function (url) {
  this.items = [ ];

  this.series = null;
  this.vol = null;
  this.title = null;

  return this._analyze (url);
};


// public: ファイル名を生成する
GentoshaPlus.prototype.buildFilename = function (args) {
  var nb = args.hasKey ('NameBuilder') && args.NameBuilder;
  if (!nb) {
    return this._ok ();
  }

  nb.series = new Utf8 (this.series);
  nb.vol = new Utf8 (this.vol);
  nb.title = new Utf8 (this.title);

  return this._buildFilename (args);
};


//------------------------------- メイン処理 -------------------------------


  if (scriptMode === 'DEFINE_ONLY') {
    return;
  }

  var ini = Util.ini_load (defaultIni);

  var getter = new GentoshaPlus ();

  if (getter.get (urlinfo.url)) {
    var nb = new NameBuilder ({
      zen2han: ini.General.Zen2Han,
      definePPZ: ini.General.PageOrigin
    });

    getter.buildFilename ({
      NameBuilder: nb,
      Format: ini.Filename.Book
    });

    getter.download ({
      AddItem: new AddItem (ini.AddItem)
    });
  }

  getter.end ();
}


// EOF
